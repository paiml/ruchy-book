// task_manager.ruchy - A simple but useful task management tool

let TASK_FILE = "tasks.txt"

fn show_menu() {
    println("\n=== Task Manager ===")
    println("1. List tasks")
    println("2. Add task")
    println("3. Complete task")
    println("4. Delete task")
    println("5. Quit")
}

fn load_tasks() {
    if file_exists(TASK_FILE) {
        return read_lines(TASK_FILE)
    }
    return []
}

fn save_tasks(tasks) {
    let content = tasks.join("\n")
    write_file(TASK_FILE, content)
}

fn list_tasks(tasks) {
    if tasks.is_empty() {
        println("\n📝 No tasks yet!")
        return
    }
    
    println(f"\n📋 Your Tasks ({tasks.len()} items):")
    for i, task in tasks.enumerate() {
        let status = if task.starts_with("✅") { "DONE" } else { "PENDING" }
        println(f"{i + 1:2}. {task}")
    }
}

fn add_task(tasks) {
    let new_task = input("\nWhat do you want to add? ")
    tasks.push(f"📌 {new_task}")
    save_tasks(tasks)
    println("✅ Task added!")
}

fn complete_task(tasks) {
    list_tasks(tasks)
    let index = input("\nWhich task to complete? (number): ").to_i() - 1
    
    if index >= 0 && index < tasks.len() {
        tasks[index] = tasks[index].replace("📌", "✅")
        save_tasks(tasks)
        println("🎉 Task completed!")
    } else {
        println("❌ Invalid task number")
    }
}

// Main program loop
let tasks = load_tasks()

loop {
    show_menu()
    let choice = input("\nChoose option: ")
    
    match choice {
        "1" => list_tasks(tasks)
        "2" => add_task(tasks)
        "3" => complete_task(tasks)
        "4" => {
            list_tasks(tasks)
            let index = input("Which task to delete? (number): ").to_i() - 1
            if index >= 0 && index < tasks.len() {
                tasks.remove(index)
                save_tasks(tasks)
                println("🗑️  Task deleted!")
            }
        }
        "5" => {
            println("👋 Goodbye!")
            break
        }
        _ => println("❌ Invalid choice")
    }
}