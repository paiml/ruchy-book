// Match expressions
match value {
    0 => "zero",
    1 | 2 => "one or two",
    3..=10 => "three through ten",
    n if n > 100 => "big number",
    _ => "something else"
}

// Destructuring patterns
match point {
    Point { x: 0, y: 0 } => "origin",
    Point { x, y: 0 } => f"on x-axis at {x}",
    Point { x: 0, y } => f"on y-axis at {y}",
    Point { x, y } => f"point at ({x}, {y})"
}

// Guards
match number {
    n if n < 0 => "negative",
    n if n > 0 => "positive", 
    _ => "zero"
}