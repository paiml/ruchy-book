// Structured API errors
struct ApiError {
    status: i32
    code: String
    message: String
    details: Option<Map<String, Any>>
}

impl ApiError {
    fn bad_request(message: String) -> ApiError {
        ApiError{
            status: 400,
            code: "BAD_REQUEST",
            message,
            details: None
        }
    }
    
    fn unauthorized() -> ApiError {
        ApiError{
            status: 401,
            code: "UNAUTHORIZED",
            message: "Authentication required",
            details: None
        }
    }
    
    fn internal_error(error: Error) -> ApiError {
        // Log full error internally
        log::error(f"Internal error: {error.chain().join(' -> ')}")
        
        // Return sanitized error to client
        ApiError{
            status: 500,
            code: "INTERNAL_ERROR",
            message: "An internal error occurred",
            details: None
        }
    }
}

// Convert to HTTP response
impl IntoResponse for ApiError {
    fn into_response(self) -> Response {
        Response::builder()
            .status(self.status)
            .json(self)
    }
}