// Spawn a thread
let handle = spawn {
    println("Running in parallel!")
    compute_result()
}

// Wait for thread to complete
let result = handle.join()

// Spawn with move semantics
let data = vec![1, 2, 3]
let handle = spawn move {
    let sum = data.sum()  // data moved into thread
    println(f"Sum: {sum}")
}

// Thread builder for configuration
let handle = Thread::builder()
    .name("worker")
    .stack_size(4 * 1024 * 1024)
    .spawn(|| {
        heavy_computation()
    })