// Attribute macro for benchmarking
#[proc_macro_attribute]
fn bench(args: TokenStream, input: TokenStream) -> TokenStream {
    let func = parse(input)
    let name = func.name
    
    quote! {
        fn $name() {
            let start = Instant::now()
            let result = { $func.body }
            let duration = start.elapsed()
            println(f"{stringify!($name)} took {duration:?}")
            result
        }
    }
}

#[bench]
fn expensive_operation() {
    // Function body
    heavy_computation()
}
// Automatically prints timing!

// Route attribute for web framework
#[route(GET, "/users/:id")]
async fn get_user(id: i32) -> Response {
    let user = fetch_user(id).await?
    Response::json(user)
}

// Test attribute with custom behavior
#[test_case(1, 2, 3)]
#[test_case(10, 20, 30)]
#[test_case(-1, -2, -3)]
fn test_addition(a: i32, b: i32, expected: i32) {
    assert_eq!(a + b, expected)
}