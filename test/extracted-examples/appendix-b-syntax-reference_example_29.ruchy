// Result type
enum Result<T, E> {
    Ok(T),
    Err(E),
}

// Option type
enum Option<T> {
    Some(T),
    None,
}

// Using ? operator
fn read_file(path: &str) -> Result<String, std::io::Error> {
    let content = std::fs::read_to_string(path)?
    Ok(content.to_uppercase())
}

// Combining with match
match result {
    Ok(value) => println("Success: {}", value),
    Err(error) => eprintln("Error: {}", error),
}