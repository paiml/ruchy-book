// File: customer_analytics.ruchy
// Analyzes customer purchase patterns

println("=== Customer Analytics Tool ===")

// Sample customer data (in practice, load from file)
let customers = [
    {"name": "Alice", "email": "alice@email.com", "orders": 5, "total_spent": 2500, "signup_date": "2023-06-15"},
    {"name": "Bob", "email": "bob@email.com", "orders": 2, "total_spent": 150, "signup_date": "2024-01-20"},
    {"name": "Carol", "email": "carol@email.com", "orders": 8, "total_spent": 4200, "signup_date": "2023-03-10"},
    {"name": "David", "email": "david@email.com", "orders": 1, "total_spent": 75, "signup_date": "2024-02-01"}
]

// Calculate key metrics
let total_customers = customers.len()
let total_revenue = customers.map(|c| c.total_spent).sum()
let average_order_value = total_revenue / customers.map(|c| c.orders).sum()
let average_customer_value = total_revenue / total_customers

println(f"Customer Base: {total_customers} customers")
println(f"Total Revenue: ${total_revenue}")
println(f"Average Order Value: ${average_order_value:.2f}")
println(f"Average Customer Value: ${average_customer_value:.2f}")

// Segment customers
let vip_customers = customers.filter(|c| c.total_spent > 1000)
let new_customers = customers.filter(|c| c.signup_date.starts_with("2024"))
let frequent_buyers = customers.filter(|c| c.orders > 5)

println(f"\nCustomer Segments:")
println(f"VIP Customers (>$1000): {vip_customers.len()}")
println(f"New Customers (2024): {new_customers.len()}")
println(f"Frequent Buyers (>5 orders): {frequent_buyers.len()}")

// Top customers by spending
let top_spenders = customers.sort_by(|c| -c.total_spent)[..3]
println(f"\nTop Spenders:")
for i, customer in top_spenders.enumerate() {
    println(f"  {i+1}. {customer.name}: ${customer.total_spent} ({customer.orders} orders)")
}