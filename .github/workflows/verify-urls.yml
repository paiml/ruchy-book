name: Verify URLs

on:
  workflow_dispatch:
  schedule:
    - cron: '*/15 * * * *'  # Every 15 minutes
  push:
    branches: [main]
  deployment_status:

jobs:
  verify-urls:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Wait for deployment
        run: sleep 60  # Give GitHub Pages time to propagate
        
      - name: Verify book.ruchy.org
        id: verify
        run: |
          echo "🔍 Verifying book.ruchy.org accessibility..."
          
          # Function to check URL
          check_url() {
            local url=$1
            local max_attempts=3
            local attempt=1
            
            while [ $attempt -le $max_attempts ]; do
              echo "Attempt $attempt of $max_attempts for $url"
              
              # Check HTTP status
              status=$(curl -s -o /dev/null -w "%{http_code}" -L "$url")
              echo "HTTP Status: $status"
              
              if [ "$status" = "200" ]; then
                echo "✅ $url is accessible (HTTP $status)"
                
                # Check for actual content
                content=$(curl -sL "$url" | head -500)
                if echo "$content" | grep -q "Ruchy"; then
                  echo "✅ Content verification passed - found 'Ruchy'"
                  return 0
                else
                  echo "⚠️ Page loads but no Ruchy content found"
                fi
              fi
              
              attempt=$((attempt + 1))
              [ $attempt -le $max_attempts ] && sleep 10
            done
            
            return 1
          }
          
          # Check main URL
          if check_url "https://book.ruchy.org/"; then
            echo "✅ Main site verification passed"
          else
            echo "❌ Main site verification FAILED"
            
            # Debug information
            echo "=== Debug Info ==="
            echo "DNS Resolution:"
            nslookup book.ruchy.org 8.8.8.8 || true
            
            echo "Direct GitHub Pages check:"
            curl -I https://paiml.github.io/ruchy-book/ || true
            
            exit 1
          fi
          
          # Check key pages
          for page in "ch00-00-introduction.html" "ch01-00-getting-started.html" "index.html"; do
            if check_url "https://book.ruchy.org/$page"; then
              echo "✅ $page is accessible"
            else
              echo "⚠️ $page not accessible (may be expected)"
            fi
          done
      
      - name: Report Status
        if: always()
        run: |
          if [ "${{ steps.verify.outcome }}" = "success" ]; then
            echo "# ✅ URL Verification Passed" >> $GITHUB_STEP_SUMMARY
            echo "book.ruchy.org is live and serving content correctly" >> $GITHUB_STEP_SUMMARY
          else
            echo "# ❌ URL Verification Failed" >> $GITHUB_STEP_SUMMARY
            echo "book.ruchy.org is not accessible or not serving correct content" >> $GITHUB_STEP_SUMMARY
            echo "Check the deployment and DNS configuration" >> $GITHUB_STEP_SUMMARY
          fi
      
      - name: Create Issue on Failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'url-verification-failure'
            });
            
            if (issues.data.length === 0) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: '🔴 CRITICAL: book.ruchy.org is not accessible',
                body: `The URL verification check has failed.\n\n**Time:** ${new Date().toISOString()}\n**Workflow:** ${context.workflow}\n**Run:** ${context.runId}\n\nThe site book.ruchy.org is returning 404 or not serving correct content.\n\nPlease check:\n1. GitHub Pages deployment status\n2. DNS configuration\n3. Workflow artifacts\n4. CNAME file presence`,
                labels: ['url-verification-failure', 'critical', 'production']
              });
            }