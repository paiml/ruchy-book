name: Ruchy Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        components: rustfmt, clippy
        
    - name: Cache cargo dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Install Ruchy
      run: |
        git clone https://github.com/paiml/ruchy.git /tmp/ruchy
        cd /tmp/ruchy
        cargo install --path . --force
        ruchy --version
        
    - name: Check code formatting
      run: |
        echo "🎨 Checking code formatting..."
        ruchy fmt --check test/extracted-examples/ || {
          echo "❌ Code formatting issues found!"
          echo "💡 Fix with: ruchy fmt test/extracted-examples/"
          exit 1
        }
        echo "✅ All code is properly formatted"
        
    - name: Lint extracted examples
      run: |
        echo "🔍 Linting code quality..."
        # Create lint report in JSON format
        ruchy lint --format json test/extracted-examples/ > lint-report.json || true
        
        # Show human-readable results
        ruchy lint --verbose test/extracted-examples/ || {
          echo "⚠️ Linting issues found - see details above"
          echo "📊 JSON report available in artifacts"
        }
        
        echo "📋 Linting complete"
        
    - name: Check syntax of all examples  
      run: |
        echo "🔧 Checking syntax of all examples..."
        find test/extracted-examples/ -name "*.ruchy" -exec ruchy check {} \; || {
          echo "❌ Syntax errors found in examples!"
          exit 1
        }
        echo "✅ All examples have valid syntax"
        
    - name: Upload quality reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: quality-reports
        path: |
          lint-report.json
        retention-days: 30
        
    - name: Comment PR with quality results
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          
          let lintResults = '';
          try {
            const lintData = JSON.parse(fs.readFileSync('lint-report.json', 'utf8'));
            const totalViolations = lintData.length || 0;
            lintResults = `🔍 **Lint Results**: ${totalViolations} issues found`;
          } catch (e) {
            lintResults = '🔍 **Lint Results**: Report not available';
          }
          
          const comment = `## 🚀 Ruchy Code Quality Report
          
          ${lintResults}
          
          📊 **Quality Checks Completed**:
          - ✅ Code formatting check
          - ✅ Syntax validation  
          - ✅ Linting analysis
          
          📁 **Artifacts**: Quality reports are available for download
          
          ---
          *Generated by Ruchy v0.10.0 quality pipeline*`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });