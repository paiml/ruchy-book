name: Deploy Book to GitHub Pages

# Deploy only on main branch pushes and manual triggers
on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Allow manual deployment

# Set permissions for GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one deployment at a time
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  RUST_VERSION: "1.75.0"
  MDBOOK_VERSION: "0.4.37"

jobs:
  # Build and deploy the book
  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_VERSION }}
      
      - name: Cache Cargo dependencies  
        uses: Swatinem/rust-cache@v2
      
      - name: Run quality gates
        run: |
          echo "üîí Running mandatory quality gates..."
          
          # Gate 1: All listings must compile
          echo "Testing code listings..."
          cargo test --tests
          
          # Gate 2: No SATD comments
          echo "Checking for SATD comments..."
          ! grep -r "TODO\|FIXME\|HACK" src/ listings/ || \
            (echo "‚ùå BLOCKED: SATD comments found" && exit 1)
          
          # Gate 3: No vaporware
          echo "Checking for vaporware..."
          ! grep -r "coming soon\|not yet implemented\|will be" src/ || \
            (echo "‚ùå BLOCKED: Vaporware documentation found" && exit 1)
          
          echo "‚úÖ Quality gates passed"
      
      - name: Install mdBook
        run: |
          curl -sSL https://github.com/rust-lang/mdBook/releases/download/v${MDBOOK_VERSION}/mdbook-v${MDBOOK_VERSION}-x86_64-unknown-linux-gnu.tar.gz | tar -xz
          chmod +x mdbook
          sudo mv mdbook /usr/local/bin/
      
      - name: Install mdbook-linkcheck
        run: cargo install mdbook-linkcheck --version 0.7.7
      
      - name: Build book
        run: |
          echo "üìö Building Ruchy book..."
          mdbook build
          
          # Verify build output
          if [ ! -f book/index.html ]; then
            echo "‚ùå Build failed: index.html not found"
            exit 1
          fi
          
          # Check for broken links (warning only)
          mdbook-linkcheck || echo "‚ö†Ô∏è Warning: Some links may be broken"
          
          echo "‚úÖ Book built successfully"
      
      - name: Add deployment info
        run: |
          # Add build information to the book
          BUILD_TIME=$(date -u "+%Y-%m-%d %H:%M:%S UTC")
          COMMIT_SHA=${GITHUB_SHA:0:7}
          
          cat >> book/build-info.html << EOF
          <div style="text-align: center; color: #666; font-size: 0.8em; margin-top: 2em; padding: 1em; border-top: 1px solid #eee;">
            Built on $BUILD_TIME | Commit <a href="${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/commit/${GITHUB_SHA}">$COMMIT_SHA</a>
          </div>
          EOF
      
      - name: Setup Pages
        uses: actions/configure-pages@v5
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./book
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
      - name: Verify deployment
        run: |
          echo "üöÄ Book deployed to: ${{ steps.deployment.outputs.page_url }}"
          
          # Optional: Test the deployed site
          sleep 10  # Give GitHub Pages time to update
          curl -f "${{ steps.deployment.outputs.page_url }}" > /dev/null && \
            echo "‚úÖ Deployment verified" || \
            echo "‚ö†Ô∏è Could not verify deployment"

  # Notify on deployment status
  notify:
    name: Notify Deployment Status
    runs-on: ubuntu-latest
    needs: deploy
    if: always()
    
    steps:
      - name: Deployment Success
        if: needs.deploy.result == 'success'
        run: |
          echo "‚úÖ Book successfully deployed!"
          echo "üìñ Available at: https://paiml.github.io/ruchy-book/"
      
      - name: Deployment Failure
        if: needs.deploy.result == 'failure'
        run: |
          echo "‚ùå Deployment failed!"
          echo "Check the logs above for details"
          exit 1